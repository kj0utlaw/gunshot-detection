#    File Name                Description
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# === UNSUPERVISED PIPELINE ===
# Phase 1: Core Implementation
1    spike_detector.py        Detects amplitude spikes and extracts short clips (0.5-1s) around events
2    extract_features.py      Extracts MFCCs, ZCR, RMS, spectral centroid from full audio or spike clips
3    unsupervised_model.py    Implements KMeans/Isolation Forest/One-Class SVM for anomaly detection
4    train_unsupervised.py    Trains and saves the unsupervised anomaly detection model
5    predict_batch.py         Processes full recordings, applies spike detection, runs all models

# Phase 2: Evaluation
6    evaluate_unsupervised.py Evaluates anomaly detection performance (ROC, PR curves)

# === UTILITY FILES ===
7    utils.py                 Helper functions (audio processing, normalization, streaming support)
8    config.yaml              Configuration for all models, fusion methods, and processing parameters
9    requirements.txt         Lists all Python dependencies

# === SUPERVISED PIPELINE (Phase 3) ===
10   generate_spectrogram.py  Creates Mel spectrograms for 2D CNN input
11   cnn_model.py             Defines both 2D CNN (spectrogram) and 1D CNN (waveform) architectures
12   hybrid_model.py          Fuses KMeans, handcrafted features, and both CNN outputs
13   train_hybrid_model.py    Trains fusion classifiers (Logistic Regression, Random Forest, KNN)
14   evaluate_model.py        Reports per-component and fused model performance

# === DOCUMENTATION ===
15   README.md                System overview, usage instructions, and streaming setup
16   system_plan.md           Detailed architecture, component interactions, and fusion logic
